---
import { Language, TextBlock as TextBlockType } from '@catechism-types';
import { getAllChildContent } from '@catechism-utils/content';

import CrossReferenceTrigger from '@components/content/catechism/cross-reference-trigger.astro';
import ParagraphNumber from './paragraph-number.astro';
import TextWrapperArray from './text-wrapper-array.astro';

interface Props {
    textBlock: TextBlockType;
    language: Language;
    paragraphNumber?: number;
}

const { textBlock, language, paragraphNumber } = Astro.props;

const childContent = getAllChildContent(textBlock);
const crossReferences = textBlock.mainContent.flatMap((t) => t.paragraphReferences);
---

<div class="px-text mb-4">
    {paragraphNumber && <ParagraphNumber {paragraphNumber} />}
    <TextWrapperArray content={childContent} {language} />

    {/* cross-references (condensed view for mobile screens) */}
    {
        crossReferences.length > 0 && (
            <div class="hide-cross-references:hidden md:hidden flex flex-wrap gap-2 mt-2 mb-4" data-pagefind-ignore="all">
                {
                    crossReferences.map((reference) => (
                        <CrossReferenceTrigger {reference} {language}>
                            <div
                                class:list={[
                                    'min-w-12 min-h-12 grid place-content-center p-2 rounded-lg cursor-pointer',
                                    'bg-neutral-150 font-sans text-2xs text-stone-700 transition-colors',
                                    'hover:bg-neutral-200 hover:text-stone-800 active:bg-neutral-300 active:text-stone-900',
                                    'dark:bg-neutral-500/40 dark:text-xs dark:text-neutral-300',
                                    'dark:hover:bg-neutral-500/60 dark:hover:text-neutral-300',
                                    'dark:active:bg-neutral-500/20 dark:active:text-neutral-300',
                                ]}
                            >
                                {reference.toString()}
                            </div>
                        </CrossReferenceTrigger>
                    ))
                }
            </div>
        )
    }
</div>
