---
import { DEFAULT_LANGUAGE, NumberOrNumberRange } from '@catechism-types';

import ContentBaseArray from '@components/catechism-content/content-base-array.astro';
import PartialLink from '@components/partial-link.astro';
import Replacement from '@components/replacement.astro';

import { getParagraphCrossReferenceContentMap, getParagraphNumberUrlMap } from '@logic/artifacts';
import { path } from '@logic/navigation-utils';
import { ElementID } from '@logic/ui';
import { CrossReferenceRoute, getCrossReferencePartialRoutes } from '@pages/_routes';

export const partial = true;

export function getStaticPaths(): Promise<Array<CrossReferenceRoute>> {
    return getCrossReferencePartialRoutes();
}

const language = Astro.params.language;
// Replace hyphens with en dashes
const reference = Astro.params.reference
    // Decode UTF-8-encoded en dashes
    .replace('%E2%80%93', '–')
    // Replace a hyphen with an en dash
    .replace('-', '–') as NumberOrNumberRange;

const contentMap = await getParagraphCrossReferenceContentMap(language);
const paragraphs = contentMap[reference];

const paragraphUrlMap = await getParagraphNumberUrlMap(language);
const firstParagraphNumber = paragraphs[0].paragraphNumber;
const url = paragraphUrlMap[firstParagraphNumber];

// deno-fmt-ignore
const clientUrl = DEFAULT_LANGUAGE === language
    ? path(url)
    : path('/', language, url);

/* Remove the hash of the URL, as including it causes a bug when interacting with HTMX,
as HTMX will use it the hash and fragment value in `document.querySelector()`, which
considers ID selectors that start with numbers as invalid (e.g. `#123`).

IDs that start with numbers are valid according to HTML5, but invalid according to HTML4. */
const contentUrl = path('/partials', clientUrl).replace(/#.*/, '');
---

<Replacement target={ElementID.CROSS_REFERENCE_NAVIGATE_TO_WRAPPER}>
    <PartialLink {clientUrl} {contentUrl} target={ElementID.CONTENT_WRAPPER_SELECTOR}>
        navigate-to: {reference}
    </PartialLink>
</Replacement>

<Replacement target={ElementID.CROSS_REFERENCE_CONTENT_WRAPPER}>
    {paragraphs && <ContentBaseArray content={paragraphs} {language} />}
</Replacement>
