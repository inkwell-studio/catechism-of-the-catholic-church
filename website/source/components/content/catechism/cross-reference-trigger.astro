---
import { Language, NumberOrNumberRange } from '@catechism-types';

import PrefetchOnMouseover from '@components/prefetch-on-mouseover.astro';

import { joinPaths } from '@logic/routing';
import { ElementID } from '@logic/ui';

interface Props {
    reference: NumberOrNumberRange;
    language: Language;
}

const { reference, language } = Astro.props;

const referenceForUrl = reference.toString().replace('â€“', '-');
const contentUrl = joinPaths('/partials/cross-reference', language, referenceForUrl);
---
<script>
    import { defineElement } from '@logic/custom-elements';
    import { onClick } from '@logic/dom-utils';
    import { $showCrossReferencePanel } from '@logic/state/cross-reference-panel';

    class CrossReferenceTrigger extends HTMLElement {
        constructor() {
            super();
        }

        connectedCallback() {
            onClick(this, () => $showCrossReferencePanel.set(true));
        }
    }

    defineElement('cross-reference-trigger', CrossReferenceTrigger);
</script>

<cross-reference-trigger>
    <PrefetchOnMouseover url={contentUrl}>
        {
            /* The `hx-target` value is not necessary for swapping the content, but setting it allows us to identify the HTMX swap events fired by this interaction.
            If no target is provided, the default value of 'this' is used in order to prevent HTMX from throwing an error from not being able to find a target.
            */
        }
        <button
            type="button"
            hx-get={contentUrl}
            hx-trigger="click"
            hx-swap="none"
            hx-target={ElementID.CROSS_REFERENCE_PANEL_SELECTOR}
        >
            <slot />
        </button>
    </PrefetchOnMouseover>
</cross-reference-trigger>
