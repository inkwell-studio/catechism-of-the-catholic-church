---
import { Language } from '@catechism-types';

import Toolbar from '@components/toolbar/toolbar.astro';

import { CATECHISM_OF_THE_CATHOLIC_CHURCH } from '@logic/strings';
import { translate as t } from '@logic/translation';

import '@shoelace-themes/light.css';
import '@css/global.css';
import '@css/shoelace-light.css';
import '@css/shoelace-dark.css';

interface Props {
    language: Language;
}
const { language } = Astro.props;

const secondsPerWeek = 604800;
Astro.response.headers.set('Cache-Control', `max-age=${secondsPerWeek}`);

const canonicalUrl = new URL(Astro.url.pathname, Astro.site).href;
---

<html lang={language}>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="theme-color" content="#1F293B" />
        <meta name="color-scheme" content="light dark" />

        <title>{t(CATECHISM_OF_THE_CATHOLIC_CHURCH, language)}</title>
        <meta
            name="description"
            content={`A web app of the ${CATECHISM_OF_THE_CATHOLIC_CHURCH}, an official doctrinal reference of the Catholic Church, first published in 1992.`}
        />

        <link rel="canonical" href={canonicalUrl} />
        <link rel="sitemap" href="/sitemap-index.xml" />

        {
            /* The favicon files were generated with [RealFaviconGenerator](https://realfavicongenerator.net/) [v0.16](https://realfavicongenerator.net/change_log#v0.16) */
        }
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
        <link rel="manifest" href="/site.webmanifest" />
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
        <meta name="msapplication-TileColor" content="#adcff4" />
        <meta name="theme-color" content="#ffffff" />

        {
            /* This script is necessary to prevent a flash of the inaccurate theme being applied. It must be included inline within the <head> element to function properly.
            The logic and constant values here must be kept in sync with those of `source/logic/theme.ts`. */
        }
        <script is:inline>
            (() => {
                const theme = globalThis.localStorage.getItem('theme');
                if (
                    'DARK' === theme ||
                    ('SYSTEM' === theme && globalThis.matchMedia('(prefers-color-scheme: dark)').matches)
                ) {
                    document.documentElement.classList.add('dark', 'sl-theme-dark');
                }
            })();
        </script>
        <script>
            import { respondToHtmx, respondToNavigationEvent } from '@logic/navigation-utils';
            import { watchForThemeChanges } from '@logic/state/theme';

            respondToHtmx();
            respondToNavigationEvent();
            watchForThemeChanges();
        </script>
        <script src="/htmx.min.js" is:inline></script>
    </head>
    <body class="bg-stone-50 font-serif font-light text-lg text-stone-950 leading-6">
        {/* Child elements are inserted here */}
        <slot />

        <div class="fixed bottom-0 inset-x-6 flex justify-center">
            <Toolbar {language} />
        </div>
    </body>
</html>
