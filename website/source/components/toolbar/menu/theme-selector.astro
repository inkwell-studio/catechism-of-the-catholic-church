---
// This component is intended to be placed on the UI only once

import './theme-selector.css';

import Icon from '@components/icon.astro';

import { Language } from '@catechism-types';

import { IconEnum } from '@components/icon-enum';
import { Theme } from '@logic/theme';
import { translate as t } from '@logic/translation';
import { ElementID } from '@logic/ui';

interface Props {
    language: Language;
}

const { language } = Astro.props;
---
<script>
    import type { SlRadioGroup } from '@shoelace-types';
    import '@shoelace/radio-button/radio-button.js';
    import '@shoelace/radio-group/radio-group.js';

    import { $theme } from '@logic/state/theme';
    import { Theme as ThemeType } from '@logic/theme';
    import { ElementID } from '@logic/ui';

    const radioGroup: SlRadioGroup | null = document.querySelector(ElementID.THEME_SELECTOR_SELECTOR);
    radioGroup.value = $theme.get();

    radioGroup?.addEventListener('sl-change', () => {
        $theme.set(radioGroup.value as ThemeType);
    });
</script>

<!-- see `./theme-selector.css` for styling -->

<div class="theme-selector">
    <sl-radio-group id={ElementID.THEME_SELECTOR} name="theme" value={Theme.LIGHT}>
        <sl-radio-button value={Theme.LIGHT}>
            <Icon icon={IconEnum.SUN} class="size-6" />
        </sl-radio-button>

        <sl-radio-button value={Theme.DARK}>
            <Icon icon={IconEnum.MOON} class="size-6" />
        </sl-radio-button>

        <sl-radio-button value={Theme.SYSTEM}>
            {t('Auto', language)}
        </sl-radio-button>
    </sl-radio-group>
</div>
