---
import { DEFAULT_LANGUAGE } from '@catechism/source/types/types';

import ApostolicConstitution from '@components/apostolic-constitution/apostolic-constitution.astro';
import ApostolicLetter from '@components/apostolic-letter/apostolic-letter.astro';
import BaseLayout from '@layouts/base-layout.astro';
import CatechismContent from '@components/catechism-content/catechism-content.astro';
import Glossary from '@components/glossary.astro';
import Home from '@components/home/content.astro';
import IndexCitations from '@components/index-citations.astro';
import IndexTopics from '@components/index-topics.astro';

import { getAllParagraphNumbersSync, getParagraphPathIdMapSync, getSemanticPathPathIdMapSync } from '@logic/artifacts';
import { getLanguageTag, getParagraphNumber, removeLanguageTag } from '@logic/routing';
import { BasicPath, basicPaths, ContentRoute, getBasicRoutes, getParagraphNumberRoutes, getTableOfContentsRoutes } from '@pages/_routes';

export function getStaticPaths(): Array<ContentRoute> {
    // prettier-ignore
    return [
        ...getBasicRoutes(),
        ...getParagraphNumberRoutes(),
        ...getTableOfContentsRoutes()
    ];
}

const language = getLanguageTag(Astro.params.path) ?? DEFAULT_LANGUAGE;
const path = removeLanguageTag(Astro.params.path, language);

const isHome = !path;
const isGlossary = BasicPath.GLOSSARY === path;
const isIndexTopics = BasicPath.INDEX_TOPICS === path;
const isIndexCitations = BasicPath.INDEX_CITATIONS === path;
const isApostolicLetter = BasicPath.APOSTOLIC_LETTER === path;
const isApostolicConstitution = BasicPath.APOSTOLIC_CONSTITUTION === path;

let pathID = null;

const isPotentialContentPath = path && !basicPaths.includes(path as BasicPath);
if (isPotentialContentPath) {
    pathID = getSemanticPathPathIdMapSync(language)[path] ?? null;

    if (!pathID) {
        const paragraphNumber = getParagraphNumber(path);
        if (paragraphNumber) {
            const paragraphNumbers = getAllParagraphNumbersSync(language);
            if (paragraphNumbers.includes(paragraphNumber)) {
                pathID = getParagraphPathIdMapSync(language)[paragraphNumber] ?? null;
            }
        }
    }
}

const isCatechismContent = !!pathID;
---

<BaseLayout language={language}>
    {isHome && <Home language={language} />}

    {isGlossary && <Glossary language={language} />}

    {isIndexTopics && <IndexTopics language={language} />}

    {isIndexCitations && <IndexCitations language={language} />}

    {isApostolicLetter && <ApostolicLetter language={language} />}

    {isApostolicConstitution && <ApostolicConstitution language={language} />}

    {isCatechismContent && <CatechismContent pathID={pathID} language={language} />}
</BaseLayout>
