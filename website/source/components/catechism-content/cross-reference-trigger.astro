---
import { Language, NumberOrNumberRange } from '@catechism-types';

import { path } from '@logic/navigation-utils';
import { ElementClass } from '@logic/ui';

import PartialTrigger from '../partial-trigger.astro';

interface Props {
    reference: NumberOrNumberRange;
    language: Language;
    hasProceedingTrigger: boolean;
}

const { reference, language, hasProceedingTrigger } = Astro.props;

const referenceForUrl = reference.toString().replace('â€“', '-');
const contentUrl = path('/partials/cross-reference', language, referenceForUrl);

const separator = hasProceedingTrigger ? ', ' : '';
---

<script>
    import { NumberOrNumberRange } from '@catechism-types';
    import { onClick } from '@logic/dom-utils';
    import { select } from '@logic/store/cross-reference';
    import { defineElement } from '@logic/custom-elements';
    import { ElementClass } from '@logic/ui';

    class CrossReferenceTrigger extends HTMLElement {
        constructor() {
            super();
        }

        connectedCallback() {
            const trigger = this.querySelector(ElementClass.CROSS_REFERENCE_TRIGGER_SELECTOR);
            onClick(trigger, () => select(this.dataset.reference as NumberOrNumberRange));
        }
    }

    defineElement('cross-reference-trigger', CrossReferenceTrigger);
</script>

<cross-reference-trigger data-reference={reference}>
    <PartialTrigger {contentUrl} class:list={[ElementClass.CROSS_REFERENCE_TRIGGER, 'cursor-pointer']}>
        {reference.toString()}{separator}
    </PartialTrigger>
</cross-reference-trigger>
