---
import { DEFAULT_LANGUAGE } from '@catechism/source/types/types';

import BaseLayout from '@layouts/base-layout.astro';
import CatechismContentWrapper from '@components/catechism-content/catechism-content-wrapper.astro';
import ApostolicConstitution from '@components/apostolic-constitution/apostolic-constitution.astro';
import ApostolicLetter from '@components/apostolic-letter/apostolic-letter.astro';

import { getAllParagraphNumbersSync, getParagraphPathIdMapSync, getSemanticPathPathIdMapSync } from '@logic/artifacts';
import { getLanguageTag, getParagraphNumber, removeLanguageTag } from '@logic/routing';
import { Slot } from '@logic/ui';
import {
    ContentRoute,
    getApostolicConstitutionRoutes,
    getApostolicLetterRoutes,
    getParagraphNumberRoutes,
    getTableOfContentsRoutes,
    Path,
} from '@pages/_routes';

export function getStaticPaths(): Array<ContentRoute> {
    // prettier-ignore
    return [
        ...getApostolicConstitutionRoutes(),
        ...getApostolicLetterRoutes(),
        ...getParagraphNumberRoutes(),
        ...getTableOfContentsRoutes()
    ];
}

const language = getLanguageTag(Astro.params.path) ?? DEFAULT_LANGUAGE;
const path = removeLanguageTag(Astro.params.path, language);
const isApostolicConstitution = Path.APOSTOLIC_CONSTITUTION === path;
const isApostolicLetter = Path.APOSTOLIC_LETTER === path;

let pathID = null;

if (!isApostolicConstitution && !isApostolicLetter) {
    pathID = getSemanticPathPathIdMapSync(language)[path] ?? null;

    if (!pathID) {
        const paragraphNumber = getParagraphNumber(path);
        if (paragraphNumber) {
            const paragraphNumbers = getAllParagraphNumbersSync(language);
            if (paragraphNumbers.includes(paragraphNumber)) {
                pathID = getParagraphPathIdMapSync(language)[paragraphNumber] ?? null;
            }
        }
    }
}

const isCatechismContent = !!pathID;
---

<BaseLayout language={language}>
    <Fragment slot={Slot.CONTENT}>
        {isApostolicConstitution && <ApostolicConstitution language={language} />}
        {isApostolicLetter && <ApostolicLetter language={language} />}
        {isCatechismContent && <CatechismContentWrapper pathID={pathID} language={language} />}
    </Fragment>
</BaseLayout>
